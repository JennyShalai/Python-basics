# Python NUMPY

# https://docs.scipy.org/doc/numpy/reference/
# https://docs.scipy.org/doc/numpy/user/quickstart.html

import numpy as np

np.sqrt(9)

vec = np.array([3,4,5]
vec.shape # 3

row_vec = np.array([7, 2, 9]).reshape(1, 3) #row vector
col_vec = np.array([3, 1, 7, 4]).reshape(4, 1) #column vector


row_vector = np.array([1, 2, 3, 4, 5, 6]).reshape(1, 6)
column_vector = np.array([11, 12, 13, 14]).reshape(4, 1)
=OR=
row_vector = np.arange(1, 7).reshape(1, -1)
column_vector = np.arange(11, 15).reshape(-1, 1)

mat = np.array([[2, 0], [5, 1], [7, -3]])
mat.shape  # (3, 2)
mat[2, 1] # -3

mat = np.arange(100).reshape(10, 10)
array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
      [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
      [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
      [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
      [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
      [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
      [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
      [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
      [80, 81, 82, 83, 84, 85, 86, 87, 88, 89],
      [90, 91, 92, 93, 94, 95, 96, 97, 98, 99]])

               
# slice of rows with mat[2:5]
array([[20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
      [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
      [40, 41, 42, 43, 44, 45, 46, 47, 48, 49]])

# slice of columns with mat[:, 4:8]
array([[ 4,  5,  6,  7],
      [14, 15, 16, 17],
      [24, 25, 26, 27],
      [34, 35, 36, 37],
      [44, 45, 46, 47],
      [54, 55, 56, 57],
      [64, 65, 66, 67],
      [74, 75, 76, 77],
      [84, 85, 86, 87],
      [94, 95, 96, 97]])

# mat[1:5, 3:6]
array([[13, 14, 15],
      [23, 24, 25],
      [33, 34, 35],
      [43, 44, 45]])

# mat[2:3] = 100
array([[  0,   1,   2,   3,   4,   5,   6,   7,   8,   9],
      [ 10,  11,  12,  13,  14,  15,  16,  17,  18,  19],
      [100, 100, 100, 100, 100, 100, 100, 100, 100, 100],
      [ 30,  31,  32,  33,  34,  35,  36,  37,  38,  39],
      [ 40,  41,  42,  43,  44,  45,  46,  47,  48,  49],
      [ 50,  51,  52,  53,  54,  55,  56,  57,  58,  59],
      [ 60,  61,  62,  63,  64,  65,  66,  67,  68,  69],
      [ 70,  71,  72,  73,  74,  75,  76,  77,  78,  79],
      [ 80,  81,  82,  83,  84,  85,  86,  87,  88,  89],
      [ 90,  91,  92,  93,  94,  95,  96,  97,  98,  99]])

# mat[:, 4:7] += -200
array([[   0,    1,    2,    3, -196, -195, -194,    7,    8,    9],
      [  10,   11,   12,   13, -186, -185, -184,   17,   18,   19],
      [ 100,  100,  100,  100, -100, -100, -100,  100,  100,  100],
      [  30,   31,   32,   33, -166, -165, -164,   37,   38,   39],
      [  40,   41,   42,   43, -156, -155, -154,   47,   48,   49],
      [  50,   51,   52,   53, -146, -145, -144,   57,   58,   59],
      [  60,   61,   62,   63, -136, -135, -134,   67,   68,   69],
      [  70,   71,   72,   73, -126, -125, -124,   77,   78,   79],
      [  80,   81,   82,   83, -116, -115, -114,   87,   88,   89],
      [  90,   91,   92,   93, -106, -105, -104,   97,   98,   99]])

replace = np.array([[1, 2], [3, 4]])
mat[8:10, 1:3] = replace
array([[   0,    1,    2,    3, -196, -195, -194,    7,    8,    9],
      [  10,   11,   12,   13, -186, -185, -184,   17,   18,   19],
      [ 100,  100,  100,  100, -100, -100, -100,  100,  100,  100],
      [  30,   31,   32,   33, -166, -165, -164,   37,   38,   39],
      [  40,   41,   42,   43, -156, -155, -154,   47,   48,   49],
      [  50,   51,   52,   53, -146, -145, -144,   57,   58,   59],
      [  60,   61,   62,   63, -136, -135, -134,   67,   68,   69],
      [  70,   71,   72,   73, -126, -125, -124,   77,   78,   79],
      [  80,    1,    2,   83, -116, -115, -114,   87,   88,   89],
      [  90,    3,    4,   93, -106, -105, -104,   97,   98,   99]])



arr = np.arange(12)   # array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])
arr % 2 == 0   # array([ True, False,  True, False,  True, False,  True, False,  True, False,  True, False], dtype=bool)
arr[arr % 2 == 0]  # array([ 0,  2,  4,  6,  8, 10])
arr[arr % 2 == 0] = -1  # array([-1,  1, -1,  3, -1,  5, -1,  7, -1,  9, -1, 11])



vec1 = np.array([3, 5, 7])
vec2 = np.array([2, 3, 4])
vec1 + vec2    # array([ 5, 8, 11])
vec1 * vec2    # array([ 6, 15, 28])
Vec1.dot(vec2) # 49

mat1 = np.array([[3,2], [7,4], [9,1]])
mat2 = np.array([[1,2], [2,3], [3,4]])
mat1 + mat2
# array([[ 4,  4],
[ 9,  7],
[12,  5]])
mat1 * mat2
    # array([[ 3, 4],
    [14, 12],
        [27, 4]])
mat1.dot(mat2)
# ValueError: shapes (3,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)
mat1 = np.array([[3,2], [7,4], [9,1]])
mat2 = np.array([[1,2], [2,3]])
mat1.dot(mat2)
    # array([[ 7, 12],
    [15, 26],
        [11, 21]])


np.amin(arr)       # min value in vector
np.transpose(X)    # transposed matrix

from numpy.linalg import matrix_rank
mat = np.array([[3,2], [7,4], [9,1]])
print(matrix_rank(mat)) # 2
